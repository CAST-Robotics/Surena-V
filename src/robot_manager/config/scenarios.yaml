# Define sequences of actions for the RobotManager to execute.
# Each step has:
#   - service: The full name of the ROS service to call.
#   - blocking: (bool) If true, the manager waits for the service to complete before continuing.
#   - params: A dictionary of parameters matching the service request.

scenarios:
  # Scenario 1: Find a cup, track it with the head for 5 seconds, then go home.
  find_and_track_cup:
    - service: "/set_target_class_srv"
      blocking: true
      params:
        class_name: "cup"
    - service: "/head_track_srv"
      blocking: true
      params:
        duration_seconds: 5.0
    - service: "/move_hand_single_srv"
      blocking: true
      params:
        mode: "righthand"
        ee_ini_pos: "init" # We'll need to handle this logic
        scenario: ["respect"]
        scen_count: 1
        t_total: 4

  # Scenario 2: A more complex "go and greet" task
  walk_and_greet:
    - service: "/walk_service"
      blocking: true
      params:
        alpha: 0.44
        t_double_support: 0.1
        t_step: 1.0
        step_length: 0.15
        step_width: 0.0
        COM_height: 0.68
        step_count: 4
        ankle_height: 0.025
        dt: 0.005
        theta: 0.0
        step_height: 0.0
        com_offset: 0.01
        is_config: false
    - service: "/move_hand_single_srv"
      blocking: true
      params:
        mode: "righthand"
        ee_ini_pos: "init"
        scenario: ["shakeHands"]
        scen_count: 1
        t_total: 8

  # Scenario 3: Your original online grip task, now as a managed sequence
  pickup_cup_online:
    - service: "/set_target_class_srv"
      blocking: true
      params:
        class_name: "cup"
    - service: "/grip_online_srv"
      blocking: true
      params:
        start: "begin"